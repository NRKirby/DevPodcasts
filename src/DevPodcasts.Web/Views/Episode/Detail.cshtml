@model DevPodcasts.ViewModels.Episode.EpisodeDetailViewModel
@{
    ViewBag.Title = Model.Title + " - " + Model.PodcastTitle;
    ViewBag.MetaDescriptionText = Model.Summary;
    var isSubscribed = Model.IsSubscribed;
}

<div class="episode-detail-container">
    <h1><a href="~/podcasts/detail/@Model.PodcastId">@Model.PodcastTitle</a></h1>
    <h2>@Model.Title</h2>
    <span class="episode-published">Published @Model.DatePublished.ToString("d MMMM yyyy")</span>

    <audio id="audio" controls>
        <source src=@Model.AudioUrl type="audio/mpeg">
        Your browser does not support the audio element.
    </audio>
    <div class="button-row">
        @if (User.Identity.IsAuthenticated)
        {
            <button class="btn btn-primary btn-sm add-remove" id="remove-from-libary" title="Remove from Library bookmarked" @(isSubscribed ? "style=display:inline-block" : "style=display:none")><span class="glyphicon glyphicon-ok"></span>Bookmarked</button>
            <button class="btn btn-primary btn-sm add-remove" id="add-to-libary" title="Add to Library bookmarks" @(isSubscribed ? "style=display:none" : "style=display:inline-block")><span class="glyphicon glyphicon-bookmark"></span>Bookmark</button>
        }
        else
        {
            <a href='@Url.Action("Login", "Account", new { ReturnUrl = "~/podcasts/detail/" + Model.Id })'><button class="btn btn-default" title="Sign in to add podcast to Library"><span class="glyphicon glyphicon-plus"></span>Add</button></a>
        }
        <button type="button" class="btn btn-primary btn-sm" onclick="location.href = '@Model.EpisodeUrl'">Episode Link</button>
    </div>


    <div class="summary">
        <h4>Summary:</h4>
        @Html.Raw(@Model.Summary)
    </div>


    <br />
    <div id="disqus_thread"></div>
</div>


<script>
    $(document).ready(function () {
        var audio = $('#audio')[0];
        audio.addEventListener("play", function() {
            gtag('event', 'audio_play', {
                'episode_title': '@Model.Title',
                'podcast_title': '@Model.PodcastTitle'
            });

        })
        audio.addEventListener("ended", function() {
            gtag('event', 'audio_ended', {
                'episode_title': '@Model.Title',
                'podcast_title': '@Model.PodcastTitle'
            });

        })

        $('.add-remove').on('click',
            function() {

                var data = {
                    u: '@Model.UserId',
                    p: '@Model.Id'
                }

                $.ajax({
                    url: "/Episode/AddRemove",
                    type: "POST",
                    data: JSON.stringify(data),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function(response) {
                        console.log(response.IsSuccess);
                        if (response.IsAdded) {
                            $('#add-to-libary').hide();
                            $('#remove-from-libary').show();
                        } else {
                            $('#remove-from-libary').hide();
                            $('#add-to-libary').show();
                        }
                    }
                });
            })
    });

    var disqus_config = function () {
        this.page.url = "@HttpContext.Current.Request.Url";
        this.page.identifier = "@Model.Id";
    };

    (function() {
        var d = document, s = d.createElement('script');
        s.src = 'https://devpodcastsdotnet.disqus.com/embed.js';
        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
</script>

<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
