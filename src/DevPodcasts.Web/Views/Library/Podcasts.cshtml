@model DevPodcasts.Web.Features.Library.ListPodcasts.ViewModel
@{
    ViewBag.Title = "Library";
    var userId = Model?.UserId ?? string.Empty;
}

<div class="library-container container">
    <h1>Library</h1>

    <ul class="nav nav-tabs" role="tablist">
        <li class="active"><a href="~/library/podcasts" role="tab">Podcasts</a></li>
        <li><a href="~/library/episodes" role="tab">Episodes</a></li>
    </ul>

    @if (Model?.SubscribedPodcasts != null)
    {
        <table>
            @foreach (var podcast in Model.SubscribedPodcasts)
            {
                var emailSubscribed = podcast.ReceiveEmailAlerts ? "email-subscribed" : "";
                var title = podcast.ReceiveEmailAlerts ? "Stop receiving email notifications" : "Receive email notifications when new episodes become available";
                <tr>
                    @Html.HiddenFor(m => podcast.Id)
                    <td class="remove-from-library"><span class="glyphicon glyphicon-remove" aria-hidden="true" title="Remove @podcast.Title from library"></span></td>
                    <td class="podcast-title"><a href="~/podcasts/detail/@podcast.Id">@podcast.Title</a></td>
                    <td class="subscribe-email-notification"><span class="glyphicon glyphicon-envelope @emailSubscribed" aria-hidden="true" title="@title"></span></td>
                </tr>
            }
        </table>
    }

</div>

<script>
    $('.remove-from-library').on('click', function () {

        var podcastTitle = $(this).parents('tr').find('td.podcast-title').text();

        if (confirm('Are you sure you want to remove ' + podcastTitle + ' from your library?')) {

            var thisTableRow = $(this).parents('tr');

            var p = $(this).parents('tr').find('input[type="hidden"]').val();
            var data = {
                u: '@userId',
                p: p
        }

            $.ajax({
                url: "/Podcasts/AddRemove",
                type: "POST",
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function() {
                    $(thisTableRow).hide("slow");
                }
            });
        }
    })

    $('.subscribe-email-notification').on('click', function () {

        var p = $(this).parents('tr').find('input[type="hidden"]').val();

        var selectedRow = $(this);

        var data = {
            u: '@userId',
            p: p
        }

        $.ajax({
            url: "/Podcasts/SubscribeUnsubscribeEmail",
            type: "POST",
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function(response) {
                if (response.IsSubscribedForEmailNotification) {
                    if (!selectedRow.children(":first").attr("class").includes("email-subscribed")) {
                        selectedRow.children(":first").addClass("email-subscribed")
                        selectedRow.children(":first").attr("title", "Stop receving email notifications")
                    }
                }  else {
                    if (selectedRow.children(":first").attr("class").includes("email-subscribed")) {
                        selectedRow.children(":first").removeClass("email-subscribed")
                        selectedRow.children(":first").attr("title", "Receive email notifications when new episodes become available")
                    }
                }
            }
        });
    })
</script>
