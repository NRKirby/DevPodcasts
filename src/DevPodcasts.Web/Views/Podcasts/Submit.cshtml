@using DevPodcasts.Models
@model DevPodcasts.Web.Features.Podcast.SubmitForReview.Model
@{
    ViewBag.Title = "Submit a podcast";
    var successResult = Model.SuccessResult;
}

<h2>Submit a podcast</h2>


@using (Html.BeginForm("Submit", "Podcasts", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Enter podcast RSS feed URL.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.RssFeedUrl, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.RssFeedUrl, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Submit" />
        </div>
    </div>
}

@if (successResult == SuccessResult.InvalidUrl)
{
    <div id="alert" class="alert alert-danger">
        <h4>Invalid URL, please try again.</h4>
    </div>
}
else if (successResult == SuccessResult.AlreadyExists)
{
    <div id="alert" class="alert alert-warning">
        <h4>Podcast already exists in the database</h4>
    </div>
}
else if (successResult == SuccessResult.Error)
{
    <div id="alert" class="alert alert-danger">
        <h4>An error occurred, please try again.</h4>
    </div>
}
else if (successResult == SuccessResult.Success)
{
    <div id="alert" class="alert alert-success">
        <h4>Thank you for submitting, we will email you once the podcast has been reviewed by admin.</h4>
    </div>
}
else
{
    <div id="alert">
        
    </div>
}

<script>
    $('#alert').delay(4000).fadeOut('slow');
</script>


